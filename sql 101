CREATE TABLE "person"(
  "person_id" VARCHAR(9) PRIMARY KEY,
  "full_name" TEXT,
  "address" TEXT,
  "building_number" TEXT,
  "phone_number" TEXT
);
.mode csv
.import --skip 1 person.csv person
.mode column

CREATE TABLE teacher (
person_id VARCHAR(9) PRIMARY KEY,
class_code TEXT
);
.mode csv
.import --skip 1 teacher.csv teacher
.mode column

CREATE TABLE student (
person_id VARCHAR(9) PRIMARY KEY,
grade_code TEXT
);

INSERT INTO student (person_id)
SELECT person_id FROM person
WHERE person_id not in
(SELECT person_id FROM teacher);

CREATE TABLE score1 (person_id VARCHAR(9),score INTEGER);
CREATE TABLE score2 (person_id VARCHAR(9),score INTEGER);
CREATE TABLE score3 (person_id VARCHAR(9),score INTEGER);

.mode csv
.import --skip 1 score1.csv score1
.import --skip 1 score2.csv score2
.import --skip 1 score3.csv score3
.mode column

CREATE TABLE score (person_id VARCHAR(9),score INTEGER);

INSERT INTO score
select person_id, score from score1
union all
select person_id, score from score2
union all
select person_id, score from score3;

DROP TABLE score1;
DROP TABLE score2;
DROP TABLE score3;

update student
set grade_code = 'GD-12'
where person_id in
(select person_id from score
group by person_id having count(score) = 3);

update student
set grade_code = 'GD-11'
where person_id in
(select person_id from score
group by person_id having count(score) = 2);

update student
set grade_code = 'GD-10'
where person_id in
(select person_id from score
group by person_id having count(score) = 1);

update student
set grade_code = 'GD-09'
where person_id not in
(select person_id from score);

select student.person_id, round(avg(score.score), 2) as avg_score
from student
join score on student.person_id = score.person_id
group by student.person_id having student.grade_code = 'GD-12'
order by avg_score desc;
